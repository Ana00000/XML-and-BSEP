{"remainingRequest":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\src\\views\\CreateOtherCertificates.vue?vue&type=template&id=15031606&scoped=true&","dependencies":[{"path":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\src\\views\\CreateOtherCertificates.vue","mtime":1618318065393},{"path":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Asus\\Desktop\\XML i veb servisi\\XML-and-BSEP\\BSEP\\bsep\\src\\main\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}